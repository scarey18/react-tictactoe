{"version":3,"sources":["game.js","index.js"],"names":["PATTERNS","Game","Object","classCallCheck","this","squares","patterns","map","p","slice","player1","alias","player2","player","id","_this","splice","indexOf","playerPatterns","filter","includes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pattern","value","length","err","return","forEach","push","opp","random","_arr","_i","winningMoves","playerTraps","findTraps","oppTraps","safeMoves","a","b","n","scoreAllMoves","_this2","bestMoves","maxScore","score","simulateMove","gameClone","createClone","playerClone","oppClone","currentPlayer","currentOpp","gameState","makeMove","move","evaluateBoard","clone","firstMove","ids","repeatedIds","arr","Math","floor","Scoreboard","react_default","createElement","Fragment","className","props","message","playerScore","cpuScore","React","Component","Square","classList","highlighted","getClassList","onClick","Board","_pattern","slicedToArray","c","src_Square","key","mapValues","highlight","Btn","isSelected","_this3","disabled","App","_this4","possibleConstructorReturn","getPrototypeOf","call","state","game","symbol","cpu","Array","fill","setState","endGame","cpuMove","newState","_this5","src_Scoreboard","setMessage","src_Board","handleClick","src_Btn","startGame","switchSymbol","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46363aea.chunk.js","sourcesContent":["const PATTERNS = [\n\t\t\t\t\t\t\t\t\t [0, 1, 2],\n\t\t\t\t\t\t\t\t\t [3, 4, 5],\n\t\t\t\t\t\t\t\t\t [6, 7, 8],\n\t\t\t\t\t\t\t\t\t [0, 3, 6],\n\t\t\t\t\t\t\t\t\t [1, 4, 7],\n\t\t\t\t\t\t\t\t\t [2, 5, 8],\n\t\t\t\t\t\t\t\t\t [0, 4, 8],\n\t\t\t\t\t\t\t\t\t [2, 4, 6],\n\t\t\t\t\t\t\t\t ]\n\n\nclass Game {\n\tconstructor() {\n\t\tthis.squares = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\t\tthis.patterns = PATTERNS.map(p => p.slice());\n\t\tthis.player1 = {\n\t\t\talias: 'player',\n\t\t\tpatterns: [],\n\t\t}\n\t\tthis.player2 = {\n\t\t\talias: 'cpu',\n\t\t\tpatterns: [],\n\t\t}\n\t}\n\n\tmakeMove(player, id) {\n\t\tthis.squares.splice(this.squares.indexOf(id), 1);\n\n\t\tconst playerPatterns = player.patterns.filter(p => p.includes(id));\n\t\tfor (const pattern of playerPatterns) {\n\t\t\tpattern.splice(pattern.indexOf(id), 1);\n\t\t\tif (pattern.length === 0) {\n\t\t\t\treturn player.alias;\n\t\t\t}\n\t\t}\n\n\t\tif (this.squares.length === 0) {\n\t\t\treturn 'draw';\n\t\t}\n\t\t\n\t\tconst unownedPatterns = this.patterns.filter(p => p.includes(id));\n\t\tunownedPatterns.forEach(pattern => {\n\t\t\tpattern.splice(pattern.indexOf(id), 1);\n\t\t\tthis.patterns.splice(this.patterns.indexOf(pattern), 1);\n\t\t\tplayer.patterns.push(pattern);\n\t\t});\n\n\t\tconst opp = player === this.player1 ? this.player2 : this.player1;\n\t\tconst oppPatterns = opp.patterns.filter(p => p.includes(id));\n\t\toppPatterns.forEach(pattern => {\n\t\t\topp.patterns.splice(opp.patterns.indexOf(pattern), 1);\n\t\t});\n\t}\n\n\tevaluateBoard(player) {\n\t\tif (this.squares.length === 8) {\n\t\t\treturn this.squares.includes(4) ? 4 : random([0, 2, 6, 8]);\n\t\t}\n\n\t\tconst opp = player === this.player1 ? this.player2 : this.player1;\n\t\tfor (const patterns of [player.patterns, opp.patterns]) {\n\t\t\tconst winningMoves = patterns.filter(p => p.length === 1);\n\t\t\tif (winningMoves.length > 0) return random(winningMoves)[0];\n\t\t}\n\n\t\tconst playerTraps = findTraps(player.patterns);\n\t\tif (playerTraps.length > 0) {\n\t\t\treturn random(playerTraps);\n\t\t}\n\n\t\tconst oppTraps = findTraps(opp.patterns);\n\t\tif (oppTraps.length === 1) {\n\t\t\treturn random(oppTraps);\n\t\t}\n\t\telse if (oppTraps.length > 1) {\n\t\t\tconst safeMoves = [];\n\t\t\tplayer.patterns.forEach(pattern => {\n\t\t\t\tpattern.forEach(a => {\n\t\t\t\t\tconst b = pattern.filter(n => n !== a)[0];\n\t\t\t\t\tif (!oppTraps.includes(b)) {\n\t\t\t\t\t\tsafeMoves.push(a);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn random(safeMoves);\n\t\t}\n\n\t\treturn this.scoreAllMoves(player);\n\t}\n\n\tscoreAllMoves(player) {\n\t\tlet bestMoves = [];\n\t\tlet maxScore = -2;\n\t\tthis.squares.forEach(id => {\n\t\t\tconst score = this.simulateMove(player, id);\n\t\t\tif (score > maxScore) {\n\t\t\t\tbestMoves = [id];\n\t\t\t\tmaxScore = score;\n\t\t\t}\n\t\t\telse if (score === maxScore) {\n\t\t\t\tbestMoves.push(id);\n\t\t\t}\n\t\t});\n\t\treturn random(bestMoves);\n\t}\n\n\tsimulateMove(player, id) {\n\t\tconst opp = player === this.player1 ? this.player2 : this.player1;\n\t\tconst gameClone = this.createClone(player, opp);\n\t\tconst playerClone = gameClone.player1;\n\t\tconst oppClone = gameClone.player2;\n\n\t\tlet currentPlayer = playerClone;\n\t\tlet currentOpp = oppClone;\n\t\tlet gameState = gameClone.makeMove(playerClone, id);\n\t\twhile (!gameState) {\n\t\t\tcurrentPlayer = currentPlayer === playerClone ? oppClone : playerClone;\n\t\t\tcurrentOpp = currentOpp === playerClone ? oppClone : playerClone;\n\t\t\tconst move = gameClone.evaluateBoard(currentPlayer);\n\t\t\tgameState = gameClone.makeMove(currentPlayer, move);\n\t\t}\n\n\t\tif (gameState === 'draw') {\n\t\t\treturn 0;\n\t\t}\n\t\telse if (gameState === playerClone.alias) {\n\t\t\treturn 1;\n\t\t}\n\t\telse {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tcreateClone(player, opp) {\n\t\tconst clone = new Game();\n\t\tclone.squares = this.squares.slice();\n\t\tclone.firstMove = this.firstMove;\n\t\tclone.patterns = this.patterns.map(p => p.slice());\n\t\tclone.player1 = {\n\t\t\talias: player.alias,\n\t\t\tpatterns: player.patterns.map(p => p.slice()),\n\t\t}\n\t\tclone.player2 = {\n\t\t\talias: opp.alias,\n\t\t\tpatterns: opp.patterns.map(p => p.slice()),\n\t\t}\n\t\treturn clone;\n\t}\n}\n\n\nfunction findTraps(patterns) {\n\tconst ids = [];\n\tconst repeatedIds = [];\n\tpatterns.forEach(pattern => {\n\t\tpattern.forEach(id => {\n\t\t\tif (!ids.includes(id)) {\n\t\t\t\tids.push(id);\n\t\t\t}\n\t\t\telse if (!repeatedIds.includes(id)) {\n\t\t\t\trepeatedIds.push(id);\n\t\t\t}\n\t\t});\n\t});\n\treturn repeatedIds;\n}\n\n\nfunction random(arr) {\n\tconst i = Math.floor(Math.random() * Math.floor(arr.length));\n\treturn arr[i];\n}\n\n\nexport {Game, PATTERNS, random};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Game, PATTERNS, random} from './game';\n\n\nclass Scoreboard extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"level\">\n\t\t\t\t\t<h1 className=\"level-item title has-text-light\" id=\"message\">\n\t\t\t\t\t\t{this.props.message}\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"level is-mobile has-text-light\" id=\"scoreboard\">\n\t\t\t\t\t<div className=\"level-item has-text-centered\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p id=\"player-symbol\">Player</p>\n\t\t\t\t\t\t\t<p id=\"player-score\">{this.props.playerScore}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"level-item has-text-centered\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p id=\"cpu-symbol\">CPU</p>\n\t\t\t\t\t\t\t<p id=\"cpu-score\">{this.props.cpuScore}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\t\n}\n\n\nclass Square extends React.Component {\n\tgetClassList() {\n\t\tlet classList = \"cell has-text-centered\";\n\t\tif (this.props.id < 6) {\n\t\t\tclassList += \" no-bottom-border\";\n\t\t}\n\t\tif ([0, 1, 3, 4, 6, 7].includes(this.props.id)) {\n\t\t\tclassList += \" no-right-border\";\n\t\t}\n\t\tif (this.props.highlighted) {\n\t\t\tclassList += \" highlighted\";\n\t\t}\n\t\treturn classList;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName={this.getClassList()} \n\t\t\t\tonClick={() => this.props.onClick()}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nclass Board extends React.Component {\n\tmapValues(id) {\n\t\tif (this.props.gameState === null) {\n\t\t\tconst message = ['T', 'I', 'C', 'T', 'A', 'C', 'T', 'O', 'E'];\n\t\t\treturn message[id];\n\t\t}\n\t\telse {\n\t\t\treturn this.props.squares[id];\n\t\t}\n\t}\n\n\thighlight(id) {\n\t\tif (this.props.gameState === null) {\n\t\t\treturn (id % 3 === 0);\n\t\t}\n\t\telse if (['player', 'cpu'].includes(this.props.gameState)) {\n\t\t\tconst squares = this.props.squares;\n\t\t\tfor (const pattern of PATTERNS.filter(p => p.includes(id))) {\n\t\t\t\tconst [a, b, c] = pattern;\n\t\t\t\tif (squares[a] &&\n\t\t\t\t\t\tsquares[a] === squares[b] &&\n\t\t\t\t\t\tsquares[a] === squares[c]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst squares = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\t\treturn (\n\t\t\t<div className=\"board has-text-light\">\n\t\t\t\t{squares.map(id => {\n\t\t\t\t\treturn <Square \n\t\t\t\t\t\t\t\t\t id={id}\n\t\t\t\t\t\t\t\t\t key={id} \n\t\t\t\t\t\t\t\t\t value={this.mapValues(id)}\n\t\t\t\t\t\t\t\t\t highlighted={this.highlight(id)}\n\t\t\t\t\t\t\t\t\t onClick={() => this.props.onClick(id)}\n\t\t\t\t\t\t\t\t />\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nclass Btn extends React.Component {\n\tgetClassList() {\n\t\tlet classList = \"button\" + this.props.classList;\n\t\tif (this.props.isSelected) {\n\t\t\tclassList += \" is-selected\";\n\t\t}\n\t\treturn classList;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={this.getClassList()}\n\t\t\t\tid={this.props.id}\n\t\t\t\tdisabled={this.props.gameState === 'playing'}\n\t\t\t\tonClick={() => this.props.onClick()}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n}\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgameState: null,\n\t\t\tsquares: null,\n\t\t\tgame: null,\n\t\t\tplayer: {\n\t\t\t\tscore: 0,\n\t\t\t\tsymbol: 'X',\n\t\t\t},\n\t\t\tcpu: {\n\t\t\t\tscore: 0,\n\t\t\t\tsymbol: 'O',\n\t\t\t},\n\t\t}\n\t}\n\n\tsetMessage() {\n\t\tswitch (this.state.gameState) {\n\t\t\tcase null: {\n\t\t\t\treturn \"Welcome!\";\n\t\t\t}\n\t\t\tcase \"playing\": {\n\t\t\t\treturn \"You are \" + this.state.player.symbol;\n\t\t\t}\n\t\t\tcase 'player': {\n\t\t\t\treturn \"You win!\";\n\t\t\t}\n\t\t\tcase 'cpu': {\n\t\t\t\treturn \"You lose!\";\n\t\t\t}\n\t\t\tcase \"draw\": {\n\t\t\t\treturn \"It's a draw!\";\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tstartGame() {\n\t\tconst squares = Array(9).fill(null);\n\t\tconst game = new Game();\n\t\tif (this.state.cpu.symbol === 'X') {\n\t\t\tconst id = random(game.squares);\n\t\t\tsquares[id] = this.state.cpu.symbol;\n\t\t\tgame.makeMove(game.player2, id);\n\t\t}\n\t\tthis.setState({\n\t\t\tgameState: 'playing',\n\t\t\tsquares,\n\t\t\tgame,\n\t\t});\n\t}\n\n\thandleClick(id) {\n\t\tif (this.state.gameState !== 'playing' || this.state.squares[id]) {\n\t\t\treturn;\n\t\t}\n\t\tconst squares = this.state.squares.slice();\n\t\tconst game = this.state.game;\n\t\tsquares[id] = this.state.player.symbol;\n\t\tlet gameState = game.makeMove(game.player1, id);\n\t\tif (gameState) {\n\t\t\treturn this.endGame(gameState, squares);\n\t\t}\n\t\tconst cpuMove = game.evaluateBoard(game.player2);\n\t\tsquares[cpuMove] = this.state.cpu.symbol;\n\t\tgameState = game.makeMove(game.player2, cpuMove);\n\t\tif (gameState) {\n\t\t\treturn this.endGame(gameState, squares);\n\t\t}\n\t\tthis.setState({squares});\n\t}\n\n\tendGame(gameState, squares) {\n\t\tthis.setState(state => {\n\t\t\tconst newState = {gameState, squares};\n\t\t\tif (gameState !== 'draw') {\n\t\t\t\tnewState[gameState] = {\n\t\t\t\t\tscore: state[gameState].score + 1,\n\t\t\t\t\tsymbol: state[gameState].symbol,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newState;\n\t\t});\n\t}\n\n\tswitchSymbol(symbol) {\n\t\tthis.setState({\n\t\t\tplayer: {\n\t\t\t\tsymbol,\n\t\t\t\tscore: this.state.player.score,\n\t\t\t},\n\t\t\tcpu: {\n\t\t\t\tsymbol: symbol === 'X' ? 'O' : 'X',\n\t\t\t\tscore: this.state.cpu.score,\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"hero\">\n\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<Scoreboard\n\t\t\t\t\t\t\tmessage={this.setMessage()}\n\t\t\t\t\t\t\tplayerScore={this.state.player.score}\n\t\t\t\t\t\t\tcpuScore={this.state.cpu.score}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Board \n\t\t\t\t\t\t\tsquares={this.state.squares}\n\t\t\t\t\t\t\tgameState={this.state.gameState}\n\t\t\t\t\t\t\tonClick={id => this.handleClick(id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"level is-mobile has-text-light\" id=\"start-button-level\">\n\t\t\t\t\t\t\t<Btn \n\t\t\t\t\t\t\t\tclassList=\" level-item is-large is-link\"\n\t\t\t\t\t\t\t\tid=\"start-button\"\n\t\t\t\t\t\t\t\tgameState={this.state.gameState}\n\t\t\t\t\t\t\t\tvalue=\"Start Game\"\n\t\t\t\t\t\t\t\tonClick={() => this.startGame()}\n\t\t\t\t\t\t\t\tisSelected={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"level is-mobile has-text-light\" id=\"option-buttons\">\n\t\t\t\t\t\t\t<Btn\n\t\t\t\t\t\t\t\tclassList=\" level-item option is-size-6 is-size-7-mobile\"\n\t\t\t\t\t\t\t\tid=\"go-first\"\n\t\t\t\t\t\t\t\tgameState={this.state.gameState}\n\t\t\t\t\t\t\t\tvalue=\"Go first (X)\"\n\t\t\t\t\t\t\t\tisSelected={this.state.player.symbol === 'X'}\n\t\t\t\t\t\t\t\tonClick={() => this.switchSymbol('X')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Btn\n\t\t\t\t\t\t\t\tclassList=\" level-item option is-size-6 is-size-7-mobile\"\n\t\t\t\t\t\t\t\tid=\"go-second\"\n\t\t\t\t\t\t\t\tgameState={this.state.gameState}\n\t\t\t\t\t\t\t\tvalue=\"Go second (O)\"\n\t\t\t\t\t\t\t\tisSelected={this.state.player.symbol === 'O'}\n\t\t\t\t\t\t\t\tonClick={() => this.switchSymbol('O')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}